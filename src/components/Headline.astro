---
import profileImage from '../assets/profile.jpg';
import TypewriterHeadline from './TypewriterHeadline.tsx';
---

<!-- Hero Section with Headshot -->
<!-- Desktop/Tablet: Horizontal Layout -->
<div class="hidden md:flex items-start justify-between mt-16 mb-8 min-h-[500px]">
    <!-- Left Content -->
    <div class="flex-1 pr-8 mr-8">
        <TypewriterHeadline client:load />
        
        <!-- <p class="text-[#ABB2BF] text-lg mb-8 max-w-md">
            He crafts responsive websites where technologies meet creativity
        </p> -->
        
        <!-- <button class="border-2 border-[#C778DD] text-[#C778DD] px-6 py-3 font-medium hover:bg-[#C778DD] hover:text-white transition-colors">
            Contact me!!
        </button> -->
    </div>
    
    <!-- Right Content - Profile Image -->
    <div class="flex flex-col items-center">
        <!-- Framed Profile Image -->
        <div class="border-2 border-[#ABB2BF] p-2 mb-8">
            <img 
                src={profileImage.src} 
                alt="Mohammed Misran" 
                class="w-80 h-96 object-cover"
            />
        </div>
        
        <!-- Status Bar -->
        <div class="flex items-center border border-[#ABB2BF] px-4 py-2">
            <div class="w-4 h-4 bg-[#C778DD] mr-3"></div>
            <span class="text-[#ABB2BF]">Currently working on<span class="text-white ml-1 font-semibold">&nbsp;Portfolio</span></span>
            <!-- <span class="text-white ml-1 font-semibold">&nbsp;Portfolio</span> -->
        </div>
    </div>
</div>

<!-- Mobile: Vertical Layout -->
<div class="md:hidden flex flex-col items-center mt-8 mb-8 px-4">

    <!-- Text Content (Bottom on Mobile) -->
    <div class="text-center">
        <TypewriterHeadline isMobile={true} client:load />
        
        <!-- <p class="text-[#ABB2BF] text-lg mb-8">
            He crafts responsive websites where technologies meet creativity
        </p> -->
        
        <!-- <button class="border-2 border-[#C778DD] text-[#C778DD] px-6 py-3 font-medium hover:bg-[#C778DD] hover:text-white transition-colors">
            Contact me!!
        </button> -->
    </div>

    <!-- Profile Image (Top on Mobile) -->
    <div class="flex flex-col items-center mb-8">
        <!-- Framed Profile Image -->
        <div class="border-2 border-[#ABB2BF] p-2 rounded-lg mb-6">
            <img 
                src={profileImage.src} 
                alt="Mohammed Misran" 
                class="w-64 h-80 object-cover rounded-md"
            />
        </div>
        
        <!-- Status Bar -->
        <div class="inline-flex items-center border border-[#ABB2BF] px-4 py-2">
            <div class="w-4 h-4 bg-[#C778DD] mr-3"></div>
            <span class="text-[#ABB2BF]">Currently working on<span class="text-white ml-1 font-semibold">&nbsp;Portfolio</span></span>
            <!-- <span class="text-[#ABB2BF]">Currently working on</span> -->
            <!-- <span class="text-white ml-1 font-semibold">&nbsp;Portfolio</span> -->
        </div>
    </div>
    
    <!-- Text Content (Bottom on Mobile) -->
    <!-- <div class="text-center"> -->
        <!-- <h1 id="headline-mobile" class="text-2xl sm:text-3xl font-bold text-white leading-tight min-h-[1.2em] mb-8"> -->
            <!-- Content will be populated by JavaScript -->
        <!-- </h1> -->
        
        <!-- <p class="text-[#ABB2BF] text-lg mb-8">
            He crafts responsive websites where technologies meet creativity
        </p> -->
        
        <!-- <button class="border-2 border-[#C778DD] text-[#C778DD] px-6 py-3 font-medium hover:bg-[#C778DD] hover:text-white transition-colors">
            Contact me!!
        </button> -->
    <!-- </div> -->
</div>

{/*}
<script>
    const headline = document.getElementById('headline');
    const headlineMobile = document.getElementById('headline-mobile');
    const finalText = 'Misran is an <span class="text-[#C778DD]">AWS expert</span> and a <span class="text-[#C778DD]">back-end developer</span>';
    const plainText = 'Misran is an AWS expert and a back-end developer';
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';

    let currentIndex = 0;
    const typingSpeed = 50; // milliseconds

    function getRandomChar() {
            return characters[Math.floor(Math.random() * characters.length)];
    }

    function typeWriter(targetElement: HTMLElement | null) {
        if (!targetElement) {
                return;
        }

        if (currentIndex <= plainText.length) {
                let displayText = '';

                // Build the text up to current position
                for (let i = 0; i < currentIndex; i++) {
                        displayText += plainText[i];
                }

                // Add scrambled characters for upcoming positions
                for (let i = currentIndex; i < Math.min(currentIndex + 10, plainText.length); i++) {
                        if (plainText[i] === ' ') {
                                displayText += ' ';
                        } else {
                                displayText += getRandomChar();
                        }
                }

                // Apply HTML formatting
                let formattedText = displayText;
                formattedText = formattedText.replace('AWS expert', '<span class="text-[#C778DD]">AWS expert</span>');
                formattedText = formattedText.replace('back-end developer', '<span class="text-[#C778DD]">back-end developer</span>');

                targetElement.innerHTML = formattedText;
                currentIndex++;

                setTimeout(() => typeWriter(targetElement), typingSpeed);
        } else {
                // Final text with proper formatting
                targetElement.innerHTML = finalText;
        }
    }

    function startAnimation() {
        // Reset animation
        currentIndex = 0;
        
        // Use window width to determine which element to animate (768px is Tailwind's md breakpoint)
        const isMobile = window.innerWidth < 768;
        
        if (isMobile && headlineMobile) {
            console.log('Animating mobile headline');
            typeWriter(headlineMobile);
        } else if (!isMobile && headline) {
            console.log('Animating desktop headline');
            typeWriter(headline);
        }
    }

    // Start animation after a brief delay
    setTimeout(startAnimation, 500);

    // Handle window resize to restart animation on the correct element
    window.addEventListener('resize', () => {
        setTimeout(startAnimation, 100);
    });
</script>
*/}
